//这只是一个随手的foolish solution，yangwuqi
//8ms, faster than 100%

func maxSubArray(nums []int) int {
    var sum int
    var max int
    max=nums[0]
    for i:=0;i<len(nums);i++{//如果现在这个连续的子序列和小于0，就从下一个元素开始重新开始找子序列，因为前面的和已经小于0了，会成为总和的累赘
        sum=sum+nums[i]
        if sum>max{
            max=sum
        }
        if sum<0{
            sum=0
        }
    }
    return max
}
